{"version":3,"sources":["components/Button.tsx","pages/About.tsx","pages/Experience.tsx","pages/Footer.tsx","pages/Header.tsx","pages/Portfolio.tsx","pages/index.tsx","registerServiceWorker.js","index.tsx"],"names":["Button","styled","a","About","React","memo","props","resume","overview","image","bio","resumeUrl","id","className","ProfilePic","src","alt","Title","Bio","DownloadButton","href","img","h2","p","Experience","experience","work","education","skills","map","school","title","years","description","company","name","level","style","width","toLowerCase","Footer","social","url","Date","getFullYear","Header","Portfolio","projects","portfolio","category","App","useState","setResume","useEffect","fetch","then","res","json","ReactGA","initialize","pageview","window","location","pathname","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.718547ab.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.a`\n    font: 16px/30px \"opensans-bold\", sans-serif;\n    background: #11abb0;\n    display: inline-block;\n    text-decoration: none;\n    letter-spacing: 0;\n    color: #fff;\n    padding: 12px 20px;\n    margin-bottom: 18px;\n    border: none;\n    cursor: pointer;\n    height: auto;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    -ms-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    -khtml-border-radius: 3px;\n    border-radius: 3px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { PageProps } from \".\";\nimport { Button } from \"../components/Button\";\n\nexport const About: React.FC<PageProps> = React.memo(props => {\n    const { image, bio, resumeUrl } = props.resume.overview;\n\n    return (\n        <section id=\"about\">\n            <div className=\"row\">\n                <div className=\"three columns\">\n                    <ProfilePic src={image} alt=\"Profile Pic\" />\n                </div>\n                <div className=\"nine columns main-col\">\n                    <Title>About Me</Title>\n\n                    <Bio>{bio}</Bio>\n                    <div className=\"row\">\n                        <div className=\"columns download\">\n                            <p>\n                                <DownloadButton href={resumeUrl}>\n                                    <i className=\"fa fa-download\" />\n                                    Download Resume\n                                </DownloadButton>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n});\n\nconst ProfilePic = styled.img`\n    position: relative;\n    width: 240px;\n    height: 220px;\n    border-radius: 100%;\n    right: 35px;\n\n    @media only screen and (max-width: 900px) {\n        width: 114px;\n        height: 114px;\n        margin-left: 12px;\n    }\n\n    @media only screen and (max-width: 767px) {\n        display: none;\n    }\n`;\n\nconst Title = styled.h2`\n    font: 22px/30px \"opensans-bold\", sans-serif;\n    color: #fff;\n    margin-bottom: 12px;\n`;\n\nconst Bio = styled.p`\n    line-height: 30px;\n    color: #eeeeee;\n`;\n\nconst DownloadButton = styled(Button)`\n    margin-top: 6px;\n    background: #444;\n\n    :hover {\n        background: #fff;\n        color: #2b2b2b;\n    }\n\n    i {\n        margin-right: 15px;\n        font-size: 20px;\n    }\n\n    @media only screen and (max-width: 767px) {\n        width: 100%;\n        text-align: center;\n        padding: 15px 20px;\n    }\n`;\n","import React from \"react\";\nimport { PageProps } from \".\";\n\nexport const Experience: React.FC<PageProps> = React.memo(props => {\n    const { work, education, skills } = props.resume.experience;\n\n    return (\n        <section id=\"resume\">\n            <div className=\"row education\">\n                <div className=\"three columns header-col\">\n                    <h1>\n                        <span>Education</span>\n                    </h1>\n                </div>\n\n                <div className=\"nine columns main-col\">\n                    <div className=\"row item\">\n                        <div className=\"twelve columns\">\n                            {education.map(({ school, title, years, description }) => (\n                                <div key={school}>\n                                    <h3>{school}</h3>\n                                    <p className=\"info\">\n                                        {title} <span>&bull;</span>\n                                        <em className=\"date\">{years}</em>\n                                    </p>\n                                    <p>{description}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row work\">\n                <div className=\"three columns header-col\">\n                    <h1>\n                        <span>Work</span>\n                    </h1>\n                </div>\n\n                <div className=\"nine columns main-col\">\n                    {work.map(({ company, title, years, description }) => (\n                        <div key={company}>\n                            <h3>{company}</h3>\n                            <p className=\"info\">\n                                {title}\n                                <span>&bull;</span> <em className=\"date\">{years}</em>\n                            </p>\n                            <p>{description}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"row skill\">\n                <div className=\"three columns header-col\">\n                    <h1>\n                        <span>Skills</span>\n                    </h1>\n                </div>\n\n                <div className=\"nine columns main-col\">\n                    <div className=\"bars\">\n                        <ul className=\"skills\">\n                            {skills.map(({ name, level }) => (\n                                <li key={name}>\n                                    <span\n                                        style={{ width: `${level}%` }}\n                                        className={`bar-expand ${name.toLowerCase()}`}\n                                    />\n                                    <em>{name}</em>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n});\n","import React from \"react\";\nimport { PageProps } from \".\";\n\nexport const Footer: React.FC<PageProps> = React.memo(props => {\n    const { social } = props.resume.overview;\n\n    return (\n        <footer>\n            <div className=\"row\">\n                <div className=\"twelve columns\">\n                    <ul className=\"social-links\">\n                        {social.map(({ name, url, className }) => (\n                            <li key={name}>\n                                <a href={url}>\n                                    <i className={className} />\n                                </a>\n                            </li>\n                        ))}\n                    </ul>\n\n                    <ul className=\"copyright\">\n                        <li>&copy; {`Copyright ${new Date().getFullYear()} Alexis Rico`}</li>\n                    </ul>\n                </div>\n                <div id=\"go-top\">\n                    <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n                        <i className=\"icon-up-open\" />\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n});\n","import React from \"react\";\nimport { PageProps } from \".\";\n\nexport const Header: React.FC<PageProps> = React.memo(props => {\n    const { name, description, social } = props.resume.overview;\n\n    return (\n        <header id=\"home\">\n            <nav id=\"nav-wrap\">\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n                    Show navigation\n                </a>\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n                    Hide navigation\n                </a>\n\n                <ul id=\"nav\" className=\"nav\">\n                    <li className=\"current\">\n                        <a className=\"smoothscroll\" href=\"#home\">\n                            Home\n                        </a>\n                    </li>\n                    <li>\n                        <a className=\"smoothscroll\" href=\"#about\">\n                            About\n                        </a>\n                    </li>\n                    <li>\n                        <a className=\"smoothscroll\" href=\"#resume\">\n                            Resume\n                        </a>\n                    </li>\n                    <li>\n                        <a className=\"smoothscroll\" href=\"#portfolio\">\n                            Works\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"responsive-headline\">{name}</h1>\n                    <h3>{description}</h3>\n                    <hr />\n                    <ul className=\"social\">\n                        {social.map(({ className, name, url }) => (\n                            <li key={name}>\n                                <a href={url}>\n                                    <i className={className} />\n                                </a>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n\n            <p className=\"scrolldown\">\n                <a className=\"smoothscroll\" href=\"#about\">\n                    <i className=\"icon-down-circle\" />\n                </a>\n            </p>\n        </header>\n    );\n});\n","import React from \"react\";\nimport { PageProps } from \".\";\n\nexport const Portfolio: React.FC<PageProps> = React.memo(props => {\n    const { projects } = props.resume.portfolio;\n\n    return (\n        <section id=\"portfolio\">\n            <div className=\"row\">\n                <div className=\"twelve columns collapsed\">\n                    <h1>Check Out Some of My Works.</h1>\n\n                    <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                        {projects.map(({ title, url, image, category }) => (\n                            <div key={title} className=\"columns portfolio-item\">\n                                <div className=\"item-wrap\">\n                                    <a href={url} title={title}>\n                                        <img alt={title} src={image} />\n                                        <div className=\"overlay\">\n                                            <div className=\"portfolio-item-meta\">\n                                                <h5>{title}</h5>\n                                                <p>{category}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"link-icon\">\n                                            <i className=\"fa fa-link\" />\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n});\n","import React, { useEffect, useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Resume } from \"../models/Resume\";\nimport { About } from \"./About\";\nimport { Experience } from \"./Experience\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\nimport { Portfolio } from \"./Portfolio\";\n\nexport const App: React.FC = React.memo(() => {\n    const [resume, setResume] = useState<Resume>();\n\n    useEffect(() => {\n        fetch(\"data.json\")\n            .then(res => res.json())\n            .then(json => setResume(json));\n    }, []);\n\n    useEffect(() => {\n        ReactGA.initialize(\"UA-140303290-1\");\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n\n    if (!resume) return null;\n\n    return (\n        <div className=\"App\">\n            <Header resume={resume} />\n            <About resume={resume} />\n            <Experience resume={resume} />\n            <Portfolio resume={resume} />\n            <Footer resume={resume} />\n        </div>\n    );\n});\n\nexport interface PageProps {\n    resume: Resume;\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\"New content is available; please refresh.\");\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get(\"content-type\").indexOf(\"javascript\") === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./pages\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}